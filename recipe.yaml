# Copyright 2021 Amazon.com.
# SPDX-License-Identifier: Apache-2.0

RecipeFormatVersion: 2020-01-25
ComponentName: community.greengrass.nodered.docker
ComponentVersion: 2.1.3
ComponentDescription: Run Node-RED in a container
ComponentPublisher: Amazon Web Services
ComponentConfiguration:
  DefaultConfiguration:
    headless: "false"
ComponentDependencies:
  aws.greengrass.Nucleus:
    VersionRequirement: ">=2.0.0 <2.5.0"
    DependencyType: SOFT
  aws.greengrass.DockerApplicationManager:
    VersionRequirement: ">0.0.0"
    DependencyType: SOFT
  aws.greengrass.TokenExchangeService:
    VersionRequirement: ">0.0.0"
  community.greengrass.nodered.auth:
    VersionRequirement: "~1.0.0"
    DependencyType: HARD
Manifests:
  - Lifecycle:
      Install:
        Script: |-
          mkdir -p data
          cat > settings.js <<EOF
          module.exports = {
              flowFile: "flows.json",
              flowFilePretty: false,
              userDir: "{work:path}/data",
              uiPort: 1880,
              uiHost: "127.0.0.1",
              logging: {
                  console: {
                      level: "info",
                      metrics: false,
                      audit: false
                  }
              },
              exportGlobalContextKeys: false,
              externalModules: {
              },
              disableEditor: {configuration:/headless},
              editorTheme: {
                  palette: {},
                  projects: {enabled: false, workflow: { mode: "manual" }},
                  codeEditor: {lib: "monaco", options: { theme: "vs", }}
              },

              functionExternalModules: true,
              functionGlobalContext: {
                  // os:require("os"),
              },
              debugMaxLength: 1000,
              mqttReconnectTime: 15000,
              serialReconnectTime: 15000,
          EOF

          cat {community.greengrass.nodered.auth:work:path}/auth.js >>settings.js 
          
          echo "}" >> settings.js
      Run:
        Script: >-
          docker run --rm 
          -p 127.0.0.1:1880:1880 
          -v {kernel:rootPath}/ipc.socket:{kernel:rootPath}/ipc.socket 
          -e AWS_REGION 
          -e AWS_CONTAINER_AUTHORIZATION_TOKEN 
          -e AWS_CONTAINER_CREDENTIALS_FULL_URI="http://169.254.170.2/2016-11-01/credentialprovider/" 
          -e AWS_GG_NUCLEUS_DOMAIN_SOCKET_FILEPATH_FOR_COMPONENT 
          -e SVCUID 
          -e AWS_IOT_THING_NAME 
          -v $PWD/data:/data 
          nodered/node-red:2.1.3
    Artifacts:
      - Uri: docker:nodered/node-red:2.1.3
